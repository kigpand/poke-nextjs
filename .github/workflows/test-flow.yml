name: Update Coverage Badge

on:
  push:
    branches: [main]

jobs:
  test-workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with: { version: 8, run_install: false }

      - uses: actions/setup-node@v4
        with: { node-version: "20", cache: "pnpm" }

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Run tests with coverage
        run: pnpm jest --coverage --coverageReporters=json-summary --coverageReporters=text-summary

      - name: Compute badge data
        id: cov
        shell: bash
        run: |
          S=$(jq '.total.statements.pct' coverage/coverage-summary.json)
          B=$(jq '.total.branches.pct'   coverage/coverage-summary.json)
          F=$(jq '.total.functions.pct'  coverage/coverage-summary.json)
          L=$(jq '.total.lines.pct'      coverage/coverage-summary.json)

          printf -v S "%.1f" "$S"; printf -v B "%.1f" "$B"
          printf -v F "%.1f" "$F"; printf -v L "%.1f" "$L"

          pick_color () { awk -v c="$1" 'BEGIN{ if(c>=90)print "brightgreen"; else if(c>=75)print "green"; else if(c>=60)print "yellow"; else if(c>=40)print "orange"; else print "red"; }'; }

          CS=$(pick_color "$S"); CB=$(pick_color "$B"); CF=$(pick_color "$F"); CL=$(pick_color "$L")

          echo "s=$S"  >> $GITHUB_OUTPUT
          echo "b=$B"  >> $GITHUB_OUTPUT
          echo "f=$F"  >> $GITHUB_OUTPUT
          echo "l=$L"  >> $GITHUB_OUTPUT
          echo "cs=$CS" >> $GITHUB_OUTPUT
          echo "cb=$CB" >> $GITHUB_OUTPUT
          echo "cf=$CF" >> $GITHUB_OUTPUT
          echo "cl=$CL" >> $GITHUB_OUTPUT

      - name: Update README (inject badges between COVERAGE_START/END)
        run: |
          S=${{ steps.cov.outputs.s }}; B=${{ steps.cov.outputs.b }}
          F=${{ steps.cov.outputs.f }}; L=${{ steps.cov.outputs.l }}
          CS=${{ steps.cov.outputs.cs }}; CB=${{ steps.cov.outputs.cb }}
          CF=${{ steps.cov.outputs.cf }}; CL=${{ steps.cov.outputs.cl }}

          BADGE_S="![Statements](https://img.shields.io/badge/statements-${S}%25-${CS})"
          BADGE_B="![Branches](https://img.shields.io/badge/branches-${B}%25-${CB})"
          BADGE_F="![Functions](https://img.shields.io/badge/functions-${F}%25-${CF})"
          BADGE_L="![Lines](https://img.shields.io/badge/lines-${L}%25-${CL})"

          CONTENT="<!-- COVERAGE_START -->
          ${BADGE_S} ${BADGE_B} ${BADGE_F} ${BADGE_L}
          <!-- COVERAGE_END -->"

          awk -v RS="" -v ORS="\n\n" -v repl="$CONTENT" '
            {
              gsub(/<!-- COVERAGE_START -->.*<!-- COVERAGE_END -->/, repl)
              print
            }' README.md > README.tmp && mv README.tmp README.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/update-coverage-badge
          branch-suffix: timestamp
          title: "chore: update coverage badges in README"
          body: "Auto-generated coverage badges from latest Jest run."
          commit-message: "chore: update coverage badges in README"
          base: main
